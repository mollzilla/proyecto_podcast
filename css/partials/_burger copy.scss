.burger__input {
    display: none;
}

.burger__label {
  z-index: 11000;
  
  background-color: transparent;

  cursor: pointer;
}

.burger__label > * {
  padding-left: .5rem;
  padding-right: .5rem;
}

/*------------------------------------*\
  $FONT AWESOME
\*------------------------------------*/
.burger__input:checked ~ .burger__label i:before {
    content: '\f00d'; /* change font awesome icon to times symbol */
}

/*------------------------------------*\
  $CUSTOM LINES
\*------------------------------------*/
.burger__lines {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 100%;
  
  transition: transform .15s cubic-bezier(.25,.01,.75,1);
}

.burger__line {
  display: block;

  width: 1em;
  height: .15em;

  margin-top: .08em;
  margin-bottom: .08em;
  border-radius: 0.1em;

  background-color: (#000);
  
  transition: all .15s cubic-bezier(.25,.01,.75,1);
}

/*------------------------------------*\
  $ROTATE CROSS
\*------------------------------------*/
/* animate back to inactive */
.burger__label--rotatecross .burger__line:nth-child(2) {
  transition: width .15s cubic-bezier(.25,.01,.75,1);
  // transition-delay: calc( .15s * 2);
}

.burger__label--rotatecross .burger__line:nth-child(1),
.burger__label--rotatecross .burger__line:nth-child(3) {
  transition-delay: .15s;
}

/* animate to active state */

/* step 1 - middle line width to zero */
.burger__input:checked ~ .burger__label--rotatecross .burger__line:nth-child(2) {
  width: 0;
  transition-delay: calc( .15s * 0);
}

/* step 2 - make a cross */
.burger__input:checked ~ .burger__label--rotatecross .burger__line:nth-child(1),
.burger__input:checked ~ .burger__label--rotatecross .burger__line:nth-child(3) {
  transition-delay: .15s;
}

.burger__input:checked ~ .burger__label--rotatecross .burger__line:nth-child(1) {
  transform: translateY( calc( .15em + .08em * 2 ) );
}

.burger__input:checked ~ .burger__label--rotatecross .burger__line:nth-child(3){
  transform: 
    translateY(calc( calc( .15em + .08em * 2 ) * -1 ))
    rotate(90deg)
  ;
}

/* step 3 - rotate everything */
.burger__input:checked ~ .burger__label--rotatecross .burger__lines {
  transition: all .15s cubic-bezier(.25,.01,.75,1);
  transition-delay: calc( .15s * 2 );
  transform: rotate(calc( 45 * 1deg ));
}
